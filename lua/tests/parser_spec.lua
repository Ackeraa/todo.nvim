describe("parser", function()
    it("can be required", function()
        local parser = require("todo.parser")
        assert.is.not_nil(parser)
    end)

    it("can parse add command", function()
        local parser = require("todo.parser"):new()
        local op, arg1, arg2 = parser:parse("add 1 hello")
        assert.is.not_nil(op, arg1, arg2)
        assert.is.equal("add", op)
        assert.is.equal(1, arg1)
        assert.is.equal("hello", arg2)
    end)

    it("can parse delete command", function()
        local parser = require("todo.parser"):new()
        local op, arg1, arg2 = parser:parse("delete 1")
        assert.is.not_nil(op, arg1, arg2)
        assert.is.equal("delete", op)
        assert.is.equal(1, arg1)
        assert.is.equal(nil, arg2)
    end)

    it("can parse done command", function()
        local parser = require("todo.parser"):new()
        local op, arg1, arg2 = parser:parse("done 1")
        assert.is.not_nil(op, arg1, arg2)
        assert.is.equal("done", op)
        assert.is.equal(1, arg1)
        assert.is.equal(nil, arg2)
    end)

    it("can parse edit command", function()
        local parser = require("todo.parser"):new()
        local op, arg1, arg2 = parser:parse("edit 1 hello")
        assert.is.not_nil(op, arg1, arg2)
        assert.is.equal("edit", op)
        assert.is.equal(1, arg1)
        assert.is.equal("hello", arg2)
    end)

end)
