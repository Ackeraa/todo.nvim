================================================================================
                                                                   *todo.nvim*

This plugin helps you manage your to-do list while working in neovim, 
purely written in lua.

Getting started with todo:
    1. Put a `require("todo").setup({opts}) call somewhere in your neovim
       config, you must pass the |file_path| to specify the location of the
       to-do list file.
    2. Run `:Todo` to start.

                                                           *todo-requirements*
This plugin works in Neovim 0.7 or higher.

                                                                  *todo-setup*
This plugin must be explicitly enabled by using `require("todo").setup{}`

You must pass the |file_path| to specify the where do you want to save of
the to-do list. Example: >

        require("todo").setup {
            file_path = "path/to/save/todo.txt"
        }
<
                                                                  *todo-usage*
There are four types of commands can be used in the floating window:

    |add| {priority} {to-do}
        Add a new to-do 

        Parameters: ~
            {priority}  Priority of the new to-do, defaults to 0
            {to-do}     Contents of the new to-do

        Examples: ~
            `add 2 do the second thing`
            `add do the first thing`
        
        Hints: ~
          - use `a, ad` for short
            
    |delete| {priority}
        Delete a to-do

        Parameters: ~
            {priority}  Priority of the to-do to be deleted

        Examples: ~
            `delete 1`
            `delete 2`

        Hints: ~
          - use `de, del`, etc for short

    |done| {priority}
        Mark a to-do as done

        Parameters: ~
            {priority}  Priority of the to-do that has been done

        Examples: ~
            `done 1`
            `done 2`

        Hints: ~
          - use `do, don` for short

    |edit| {priority} {new-to-do}|/|{new-priority}
        Edit a to-do's priority or contents

        Parameters: ~
            {priority}     Priority of the to-do to be edited
            {new-to-do}    The new contents of the to-do 
            {new-priority} The new priority of the to-do

        Examples: ~
            `edit 1 2`                 -- change the priority 
            `edit 1 do the new thing`  -- change the contents 

        Hints: ~
          - use `e, ed, edi` for short
          - pass either {new-to-do} or {new-priority}, but not both

                                                              *todo-extension*




 vim:tw=78:ts=8:ft=help:norl:
